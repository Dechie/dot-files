// FILE LOCATION: ~/.config/VSCodium/User/settings.json
{
  "workbench.sideBar.location": "right",
  "security.workspace.trust.untrustedFiles": "open",
  "workbench.colorTheme": "Monokai++",
  "editor.codeActionsOnSave": {
    "source.fixAll": "always"
  },
  "vim.leader": "<Space>",
  "terminal.integrated.sendKeybindingsToShell": true,
  "vim.timeout": 200,
  "vim.useSystemClipboard": true,

  "vim.insertModeKeyBindings": [
    {
      "before": ["j", "j"],
      "after": ["<Esc>", "l"]
    }
  ],
  "vim.useCtrlKeys": true,
  "vim.handleKeys": {
    "<C-f>": true,
    "<C-a>": false
  },
  "vim.normalModeKeyBindings": [
    {
      "before": ["v", "n"],
      "after": ["v", "g", "_", "y"]
    },
    {
      // find the source definition instead of the .d.ts file

      // 'f'ind the source 'd'efinition
      "before": ["f", "d"],
      "commands": ["typescript.goToSourceDefinition"]
    },
    {
      // df is easier to hit than gd
      // go to the 'd'e'f'inition
      "before": ["d", "f"],
      "after": ["g", "d"]
    },
    {
      "before": ["d", "n"],
      "after": ["d", "g", "_"]
    }
  ],
  "vim.normalModeKeyBindingsNonRecursive": [
    {
      "before": ["<C-n>"],
      "commands": [":nohl"]
    },
    // NAVIGATION
    // switch b/w buffers
    { "before": ["<S-h>"], "commands": [":bprevious"] },
    { "before": ["<S-l>"], "commands": [":bnext"] },

    // splits
    { "before": ["leader", "v"], "commands": [":vsplit"] },
    { "before": ["leader", "s"], "commands": [":split"] },

    // panes
    {
      "before": ["leader", "h"],
      "commands": ["workbench.action.focusLeftGroup"]
    },
    {
      "before": ["leader", "j"],
      "commands": ["workbench.action.focusBelowGroup"]
    },
    {
      "before": ["leader", "k"],
      "commands": ["workbench.action.focusAboveGroup"]
    },
    {
      "before": ["leader", "l"],
      "commands": ["workbench.action.focusRightGroup"]
    },
    // NICE TO HAVE
    {
      "before": ["leader", "w"],
      "commands": ["workbench.action.files.saveAll"]
    },
    { "before": ["leader", "q"], "commands": [":q!"] },
    { "before": ["leader", "x"], "commands": [":x!"] },
    {
      "before": ["[", "d"],
      "commands": ["editor.action.marker.prev"]
    },
    {
      "before": ["]", "d"],
      "commands": ["editor.action.marker.next"]
    },
    {
      "before": ["<leader>", "c", "a"],
      "commands": ["editor.action.quickFix"]
    },
    { "before": ["leader", "f"], "commands": ["workbench.action.quickOpen"] },
    { "before": ["leader", "p"], "commands": ["editor.action.formatDocument"] },
    {
      "before": ["g", "h"],
      "commands": ["editor.action.showDefinitionPreviewHover"]
    }
  ],
  // vim mode viwy viwcmd+d p issue hack
  "vim.visualModeKeyBindingsNonRecursive": [
    {
      "before": ["p"],
      "commands": ["editor.action.clipboardPasteAction"]
    },
    // Stay in visual mode while indenting
    { "before": ["<"], "commands": ["editor.action.outdentLines"] },
    { "before": [">"], "commands": ["editor.action.indentLines"] },
    // Move selected lines while staying in visual mode
    { "before": ["J"], "commands": ["editor.action.moveLinesDownAction"] },
    { "before": ["K"], "commands": ["editor.action.moveLinesUpAction"] },
    // toggle comment selection
    { "before": ["leader", "c"], "commands": ["editor.action.commentLine"] }
  ],

  "breadcrumbs.enabled": false,

  "editor.tabSize": 2,
  "editor.wordWrap": "on",
  "editor.lineNumbers": "relative",
  "editor.codeLens": false,
  "editor.folding": false,
  "editor.glyphMargin": false,
  "editor.formatOnSave": true,
  // "editor.hover.enabled": false,
  "editor.colorDecorators": false,
  "editor.minimap.enabled": false,
  "editor.cursorBlinking": "blink",
  "editor.renderWhitespace": "none",
  "editor.suggestSelection": "first",
  "editor.acceptSuggestionOnCommitCharacter": false,
  "editor.guides.indentation": false,
  "editor.renderControlCharacters": false,
  "editor.cursorSmoothCaretAnimation": "on",
  "editor.bracketPairColorization.enabled": false,
  "editor.defaultFormatter": "esbenp.prettier-vscode",
  "prettier.singleQuote": true,
  "editor.wordSeparators": "/\\()\"':,.;<>~!@#$%^&*|+=[]{}`?-",
  "editor.renderLineHighlight": "all",

  // font settings
  "editor.fontSize": 17,
  "editor.fontWeight": "500",
  "editor.fontLigatures": true,
  "terminal.integrated.fontSize": 17,
  "terminal.integrated.fontWeight": "500",
  "terminal.integrated.fontWeightBold": "500",
  "workbench.fontAliasing": "antialiased",
  "editor.fontFamily": "Iosevka Custom",
  "terminal.integrated.fontFamily": "Iosevka Custom",

  "explorer.compactFolders": false,

  "files.trimTrailingWhitespace": true,
  "files.exclude": {
    "**/node_modules": true,
    "**/package-lock.json": true,
    // Hide js files after running tsc.
    "**/*.js": { "when": "$(basename).ts" }
  },

  "search.searchOnType": false,
  "scm.diffDecorationsGutterAction": "none",

  "telemetry.telemetryLevel": "off",

  "terminal.integrated.drawBoldTextInBrightColors": false,
  "terminal.integrated.defaultProfile.osx": "zsh",
  "terminal.integrated.copyOnSelection": true,
  "terminal.integrated.cursorBlinking": true,
  // "terminal.integrated.gpuAcceleration": "on",

  "typescript.updateImportsOnFileMove.enabled": "always",

  "vsintellicode.modify.editor.suggestSelection": "choseToUpdateConfiguration",

  // "workbench.activityBar.visible": false,
  "workbench.editor.enablePreviewFromQuickOpen": false,
  "zenMode.hideLineNumbers": false,

  // italicize comments in github dark default theme
  "editor.tokenColorCustomizations": {
    "textMateRules": [
      // {
      //   "scope": "comment",
      //   "settings": {
      //     "fontStyle": "italic"
      //   }
      // },
      {
        "scope": "storage.type",
        "settings": {}
      },
      {
        "scope": "entity.name.type, entity.name.class, entity.name.namespace, entity.name.scope-resolution",
        "settings": {
          "fontStyle": "underline"
        }
      },
      {
        "scope": "entity.other.inherited-class",
        "settings": {
          "foreground": "#A6E22E",
          "fontStyle": "underline"
        }
      },
      {
        "scope": "variable.parameter",
        "settings": {
          "foreground": "#FD971F"
        }
      },
      {
        "scope": "support.type, support.class",
        "settings": {}
      },
      {
        "scope": "markup.heading.setext",
        "settings": {
          "fontStyle": "bold"
        }
      },
      {
        "scope": "markup.heading.markdown",
        "settings": {
          "fontStyle": "bold"
        }
      },
      {
        "scope": "markup.quote.markdown",
        "settings": {
          "fontStyle": "italic"
        }
      },
      {
        "scope": "markup.bold.markdown",
        "settings": {
          "fontStyle": "bold"
        }
      },
      {
        "scope": "markup.italic.markdown",
        "settings": {
          "fontStyle": "italic"
        }
      },
      {
        "scope": "markup.strikethrough",
        "settings": {
          "fontStyle": "strikethrough"
        }
      }
    ]
  },

  // control what gets rendered in the editor overview ruler (scrollbar)
  "editor.overviewRulerBorder": false,
  "editor.occurrencesHighlight": "multiFile",

  "window.commandCenter": false,
  "workbench.colorCustomizations": {},
  "workbench.iconTheme": "vscode-great-icons",
  "workbench.tree.renderIndentGuides": "none",

  "[csharp]": {
    "editor.defaultFormatter": "csharpier.csharpier-vscode"
  },
  "omnisharp.useModernNet": false,
  "omnisharp.monoPath": "/Library/Frameworks/Mono.framework/Versions/Current",
  "dotnet.backgroundAnalysis.analyzerDiagnosticsScope": "none",
  "dotnet.server.useOmnisharp": true,
  "window.customTitleBarVisibility": "auto",
  "workbench.layoutControl.enabled": false
  //   "workbench.colorTheme": "Default Dark Modern"
}
